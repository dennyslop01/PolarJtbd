@using Jtbd.Application.Interfaces
@using Jtbd.Domain.Entities
@using Jtbd.Webapp.Service
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authenticationStateProvider

@inherits LayoutComponentBase

@if (!string.IsNullOrEmpty(username))
{
    <div class="page">
        <div class="sidebar" id="demo">
            @if (!string.IsNullOrEmpty(username))
            {
                <NavMenu userrol="@userrol.ToString()"/>
            }
        </div>

        <main>
            <button type="button" class="btn btn-xs btn-primary" onclick="toggleBootstrapCollapse();">
                ☰
            </button>
            <div class="row">
                <div class="col-lg-6">
                    <p>
                        <h5><strong>&nbsp;&nbsp;&nbsp;&nbsp;JTBD WEB APP – Empresas Polar</strong></h5>
                    </p>
                </div>
                <div class="col-lg-5 d-flex justify-content-end mb-3">
                    <strong>@usernamelargo</strong>
                </div>
            </div>

            <article class="content px-4">
               @Body
            </article>
        </main>
    </div>

    <div id="blazor-error-ui" data-nosnippet>
        An unhandled error has occurred.
        <a href="." class="reload">Reload</a>
        <span class="dismiss">🗙</span>
    </div>
    @if (mostrarAlerta)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @mensajeAlerta
            <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
        </div>
    }
}
else
{
    <PageTitle>No Autorizado</PageTitle>

    <div class="row align-content-center">
        <div class="col-lg-11">
            <div class="col-lg-11">
                <h3 class="text-center mt-4">No Autorizado</h3>
                <h6>@usernamelargo</h6>
                <h6>@username</h6>
            </div>
        </div>
    </div>
}


@code{
    private string username = "dusa-user";
    private string usernamelargo = string.Empty;
    private int userrol = 5;
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;

    [Inject] private IEmployee repouser { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            if (authState.User.Identity.IsAuthenticated)
            {
                usernamelargo = authState.User.Identity.Name;
                username = authState.User.Identity.Name.Split(@"\")[1].Trim();
                Employee user = await repouser.GetByUsernameAsync(username);

                if (user != null)
                {
                    userrol = user.EmployeeRol;
                }
            }
        }
        catch (Exception ex)
        {
            mensajeAlerta = ex.Message;
            mostrarAlerta = true;
        }
    }
}

<script>

    function toggleBootstrapCollapse() {
        var x = document.getElementById("demo");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>