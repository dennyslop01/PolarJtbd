@page "/proyect/proyecsagrupar/{IdProyecto}"

@rendermode InteractiveServer
@using Jtbd.Application.Interfaces
@using Jtbd.Domain.Entities
@using Jtbd.Webapp.Data
@inject IJSRuntime JSRuntime
@inject IConfiguration configuration
@inject ILogger<Interview> Logger

<PageTitle>Agrupar Historias</PageTitle>
<div class="row align-content-center">
    <div class="col-lg-12">
        <div class="col-lg-11">
            <div class="d-flex justify-content-start mb-3">
                <button class="btn btn-link btn-sm me-2 align-content-end" title="Regresar" @onclick="Regresar">
                    @(proyecto == null ? "-" : proyecto.ProjectName)  <i class="bi bi-arrow-return-left"></i>
                </button>
                @* <table class="table table-striped table-hover">
                    <thead class="table bg-opacity-25">
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Proyecto : @(proyecto == null ? "-" : proyecto.ProjectName) </td>
                            <td>
                            </td>
                        </tr>
                    </tbody>
                </table> *@
            </div>
            <h3 class="text-center mt-4">Agrupar Historias</h3>

            @if (mostrarAlerta)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @mensajeAlerta
                    <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
                </div>
            }
        </div>
    </div>
</div>

<div class="row align-content-center">
    <div class="col-lg-6">       
        <div class="col-lg-11">
            
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string IdProyecto { get; set; }

    private List<Groups> grupos = new();
    private CreateGroup entidadActual = new();
    private bool mostrarFormulario = false;
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;

    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    [Inject] private IGroups repository { get; set; } = null!;
    [Inject] private IProjects repoproyect { get; set; } = null!;
    private Projects proyecto = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            proyecto = (Projects)await repoproyect.GetByIdAsync(int.Parse(IdProyecto));

            grupos = (List<Groups>)await repository.GetByProjectIdAsync(int.Parse(IdProyecto));
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.Message);
        }
    }

    private void Regresar()
    {
        try
        {
            NavigationManager.NavigateTo($"proyect/proyectos");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.Message);
        }
    }

}