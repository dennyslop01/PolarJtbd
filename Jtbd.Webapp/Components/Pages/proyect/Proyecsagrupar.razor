@page "/proyect/proyecsagrupar/{IdProyecto}"
@rendermode InteractiveServer
@using Jtbd.Application.Interfaces
@using Jtbd.Domain.Entities
@inject IJSRuntime JSRuntime
@inject IConfiguration configuration
@inject ILogger<Interview> Logger

<PageTitle>Agrupar Historias</PageTitle>
<div class="row align-content-center">
    <div class="col-lg-6">
        
        <div class="col-lg-11">
            <button class="btn btn-link btn-sm me-2 align-content-end" title="Regresar" @onclick="Regresar">
                @(proyecto == null ? "-" : proyecto.ProjectName)  <i class="bi bi-arrow-return-left"></i>
            </button>
            @* <table class="table table-striped table-hover">
                <thead class="table bg-opacity-25">
                    <tr>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Proyecto : @(proyecto == null ? "-" : proyecto.ProjectName) </td>
                        <td>
                            <button class="btn btn-secondary btn-sm me-2 align-content-end" title="Regresar" @onclick="Regresar">
                                <i class="bi bi-arrow-return-left"></i>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table> *@
            <h3 class="text-center mt-4">Agrupar Historias</h3>
        </div>
       @*  <div style="display: flex;">
            <div style="flex: 1;">
                <h4>Draggable Items</h4>
                <DraggableItem ItemName="Item A" OnDragStartCallback="HandleDragStart" />
                <DraggableItem ItemName="Item B" OnDragStartCallback="HandleDragStart" />
            </div>
            <div style="flex: 1;">
                <h4>Drop Zone</h4>
                <DropZone DroppedItems="droppedItems" />
            </div>
        </div> *@

        @if (mostrarAlerta)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @mensajeAlerta
                <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string IdProyecto { get; set; }

    private List<Groups> grupos = new();
    private CreateGroup entidadActual = new();
    private bool mostrarFormulario = false;
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;

    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    [Inject] private IGroups repository { get; set; } = null!;
    [Inject] private IProjects repoproyect { get; set; } = null!;
    private Projects proyecto = new();

    private List<string> droppedItems = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            proyecto = (Projects)await repoproyect.GetByIdAsync(int.Parse(IdProyecto));

            grupos = (List<Groups>)await repository.GetByProjectIdAsync(int.Parse(IdProyecto));
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.Message);
        }
    }

    private void Regresar()
    {
        try
        {
            NavigationManager.NavigateTo($"proyect/proyectos");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.Message);
        }
    }

    private void HandleDragStart(string itemName)
    {
        // Optional: Perform actions when dragging starts
        Console.WriteLine($"Dragging started for: {itemName}");
    }
}

