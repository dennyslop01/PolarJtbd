@page "/proyect/proyecsmatriz/{IdProyecto}"

@rendermode InteractiveServer
@using Jtbd.Application.Interfaces
@using Jtbd.Domain.Entities
@inject IJSRuntime JSRuntime
@inject IConfiguration configuration
@inject ILogger<Proyecstories> Logger


<PageTitle>Historias</PageTitle>
<div class="row align-content-center">
    <div class="col-lg-11">
        <div class="col-lg-11">
            <button class="btn btn-link btn-sm me-2 align-content-end" title="Regresar" @onclick="Regresar2">
                @(proyecto == null ? "-" : proyecto.ProjectName)  <i class="bi bi-arrow-return-left"></i>
            </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <h3 class="text-center mt-4">Matriz de Historias y Grupos</h3>
        </div>
    </div>
    <div class="col-lg-10">
        @if (mostrarAlerta)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @mensajeAlerta
                <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
            </div>
        }


        @if (stories is null)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status"></div>
                <p>Cargando datos...</p>
            </div>
        }
        else if (!stories.Any())
        {
            <div class="alert alert-info text-center">No hay datos disponibles.</div>
        }
        else
        {
            <table class="table table-striped table-hover">
                <thead class="table-secondary bg-opacity-25">
                    <tr>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var (p, index) in stories.Select((p, i) => (p, i + 1)))
                    {
                        <tr>
                            <td>@p.IdStorie</td>
                            <td>@p.TitleStorie</td>
                            <td>@p.ContextStorie</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    [Parameter]
    public string IdProyecto { get; set; }

    private List<Stories> stories = new();
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;

    private Projects proyecto = new();
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    [Inject] private IStories repository { get; set; } = null!;
    [Inject] private IProjects repoproyect { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            proyecto = (Projects)await repoproyect.GetByIdAsync(int.Parse(IdProyecto));

            stories = (List<Stories>)await repository.GetByProjectIdAsync(int.Parse(IdProyecto));
        }
        catch (Exception ex)
        {
            //Logger.LogError(ex.Message);
            await this.JSRuntime.InvokeVoidAsync("console.log", ex.Message);
        }
    }

    private void Regresar2()
    {
        try
        {
            NavigationManager.NavigateTo($"proyect/proyectos");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.Message);
        }
    }
}
