// <auto-generated />
using System;
using Jtbd.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jtbd.Infrastructure.Migrations
{
    [DbContext(typeof(JtbdDbContext))]
    partial class JtbdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jtbd.Domain.Entities.Anxieties", b =>
                {
                    b.Property<int>("IdAnxie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnxie"));

                    b.Property<string>("AnxieName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<int>("StatusAnxie")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnxie");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("Anxieties");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Deparments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Deparments");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeparmentsId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeRol")
                        .HasColumnType("int");

                    b.Property<int>("StatusEmployee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeparmentsId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Habits", b =>
                {
                    b.Property<int>("IdHabit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabit"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HabitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<int>("StatusHabit")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHabit");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Interviews", b =>
                {
                    b.Property<int>("IdInter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInter"));

                    b.Property<DateTime>("DateInter")
                        .HasColumnType("datetime2");

                    b.Property<int>("InterAge")
                        .HasColumnType("int");

                    b.Property<int>("InterGender")
                        .HasColumnType("int");

                    b.Property<string>("InterNSE")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("InterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InterNickname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InterOccupation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdInter");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Projects", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProject"));

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeparmentId")
                        .HasColumnType("int");

                    b.Property<int>("MaxPulls")
                        .HasColumnType("int");

                    b.Property<int>("MaxPushes")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProjectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RutaImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusProject")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProject");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("DeparmentId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.PullGroups", b =>
                {
                    b.Property<int>("IdPull")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPull"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<string>("PullDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusPull")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPull");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("PullGroups");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.PushesGroups", b =>
                {
                    b.Property<int>("IdPush")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPush"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<string>("PushDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PushName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusPush")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPush");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("PushesGroups");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Stories", b =>
                {
                    b.Property<int>("IdStorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStorie"));

                    b.Property<string>("ContextStorie")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdInter1")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectIdProject")
                        .HasColumnType("int");

                    b.Property<string>("TitleStorie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStorie");

                    b.HasIndex("IdInter1");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Anxieties", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdProject");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Deparments", "Deparments")
                        .WithMany()
                        .HasForeignKey("DeparmentsId");

                    b.Navigation("Deparments");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Habits", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdProject");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Projects", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");

                    b.HasOne("Jtbd.Domain.Entities.Deparments", "Deparment")
                        .WithMany()
                        .HasForeignKey("DeparmentId");

                    b.Navigation("Categories");

                    b.Navigation("Deparment");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.PullGroups", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdProject");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.PushesGroups", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdProject");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Jtbd.Domain.Entities.Stories", b =>
                {
                    b.HasOne("Jtbd.Domain.Entities.Interviews", "IdInter")
                        .WithMany()
                        .HasForeignKey("IdInter1");

                    b.HasOne("Jtbd.Domain.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdProject");

                    b.Navigation("IdInter");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
